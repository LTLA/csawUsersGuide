
R version 3.4.0 Patched (2017-04-24 r72623) -- "You Stupid Darkness"
Copyright (C) 2017 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> # This script demonstrates that TMM normalization fails with low counts.
> # Namely, does it accurately estaimte the normalization factors?
> 
> library(edgeR)
Loading required package: limma
> 
> #########################################################
> # Setting up a simulator function.
> 
> simulator <- function(ngenes, genes.spiked, mu.back, mult, disp) {
+     mu.spike <- mu.back*mult
+     x1 <- rnbinom(ngenes, mu=mu.back, size=1/disp)
+     normed <- mu.back*ngenes/(mu.back*(ngenes-genes.spiked)+mu.spike*genes.spiked)
+     x2 <- rnbinom(ngenes, mu=mu.back*normed, size=1/disp)
+     spiked <- sample(ngenes, genes.spiked)
+     x2[spiked] <- rnbinom(genes.spiked, mu=mu.spike*normed, size=1/disp)
+     return(list(counts=cbind(x1, x2), factor=normed, spiked=spiked))
+ }
> 
> set.seed(1000)
> ngenes <- 10000
> 
> #########################################################
> # Simulating whether non-unity factors are accurately estimated.
> 
> lapply(1:3, FUN=function(i) {
+     x <- simulator(ngenes, 200, 2, 5, 0.05) # low count
+     calcNormFactors(x$counts)
+ })
[[1]]
[1] 1.0013521 0.9986498

[[2]]
[1] 1.0069616 0.9930865

[[3]]
[1] 1.0052563 0.9947712

> 
> lapply(1:3, FUN=function(i) {
+     x <- simulator(ngenes, 200, 10, 5, 0.05) # middle count
+     calcNormFactors(x$counts)
+ })
[[1]]
[1] 1.0291659 0.9716607

[[2]]
[1] 1.029547 0.971301

[[3]]
[1] 1.0341057 0.9670192

> 
> lapply(1:3, FUN=function(i) {
+     x <- simulator(ngenes, 200, 50, 5, 0.05) # high count
+     calcNormFactors(x$counts)
+ })
[[1]]
[1] 1.0356454 0.9655815

[[2]]
[1] 1.0345765 0.9665791

[[3]]
[1] 1.0356693 0.9655591

> 
> x <- simulator(ngenes, 200, 50, 5, 0.05) 
> c(1/sqrt(x$factor), sqrt(x$factor)) # Truth.
[1] 1.0392305 0.9622504
> 
> #########################################################
> # No undersampling at all, just differences in library size.
> # True values should be 1, 1.
> 
> lapply(1:3, FUN=function(i) {
+     x <- matrix(rnbinom(ngenes*2, mu=c(1, 5), size=20), nrow=ngenes, ncol=2, byrow=TRUE)
+     calcNormFactors(x)
+ })
[[1]]
[1] 1.229705 0.813203

[[2]]
[1] 1.2368873 0.8084811

[[3]]
[1] 1.2328770 0.8111109

> 
> lapply(1:3, FUN=function(i) {
+     x <- matrix(rnbinom(ngenes*2, mu=c(10, 50), size=20), nrow=ngenes, ncol=2, byrow=TRUE)
+     calcNormFactors(x)
+ })
[[1]]
[1] 0.9935526 1.0064892

[[2]]
[1] 0.9947951 1.0052322

[[3]]
[1] 0.9936823 1.0063579

> 
> #########################################################
> # Wrapping up
> 
> sessionInfo()
R version 3.4.0 Patched (2017-04-24 r72623)
Platform: x86_64-pc-linux-gnu (64-bit)
Running under: Ubuntu 14.04.5 LTS

Matrix products: default
BLAS: /home/cri.camres.org/lun01/Software/R/R-3-4-branch_release/lib/libRblas.so
LAPACK: /home/cri.camres.org/lun01/Software/R/R-3-4-branch_release/lib/libRlapack.so

locale:
 [1] LC_CTYPE=en_GB.UTF-8       LC_NUMERIC=C              
 [3] LC_TIME=en_GB.UTF-8        LC_COLLATE=en_GB.UTF-8    
 [5] LC_MONETARY=en_GB.UTF-8    LC_MESSAGES=en_GB.UTF-8   
 [7] LC_PAPER=en_GB.UTF-8       LC_NAME=C                 
 [9] LC_ADDRESS=C               LC_TELEPHONE=C            
[11] LC_MEASUREMENT=en_GB.UTF-8 LC_IDENTIFICATION=C       

attached base packages:
[1] stats     graphics  grDevices utils     datasets  methods   base     

other attached packages:
[1] edgeR_3.18.0 limma_3.32.1

loaded via a namespace (and not attached):
[1] compiler_3.4.0  grid_3.4.0      locfit_1.5-9.1  lattice_0.20-35
> 
> 
> proc.time()
   user  system elapsed 
  0.804   0.016   0.819 
